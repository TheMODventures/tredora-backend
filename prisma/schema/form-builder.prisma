enum FieldType {
  TEXT
  TEXTAREA
  NUMBER
  EMAIL
  DATE
  CHECKBOX
  RADIO
  SELECT
  FILE
  PASSWORD
  URL
  TEL
}

enum ValidationRuleType {
  REQUIRED
  MIN_LENGTH
  MAX_LENGTH
  MIN
  MAX
  PATTERN
  EMAIL
  URL
  CUSTOM
}

model FormTemplate {
  id          String            @id @default(uuid())
  name        String
  description String?
  isActive    Boolean           @default(true)
  version     Int               @default(1)

  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt

  // Relations
  fields      FormField[]

  @@map("form_templates")
}

model FormField {
  id            String      @id @default(uuid())
  key           String      // Unique key for the field (e.g., "applicant_name")
  label         String      // Display label
  fieldType     FieldType
  placeholder   String?
  defaultValue  String?
  answer        String?     // Store the answer/value for this field
  helpText      String?
  order         Int
  width         String?     // e.g., "full", "half", "third" for responsive layouts

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  // Relations
  templateId    String
  template      FormTemplate     @relation(fields: [templateId], references: [id], onDelete: Cascade)
  options       FieldOption[]
  validations   FieldValidation[]

  @@map("form_fields")
}

model FieldOption {
  id          String   @id @default(uuid())
  label       String
  value       String
  order       Int
  isDefault   Boolean  @default(false)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  fieldId     String
  field       FormField @relation(fields: [fieldId], references: [id], onDelete: Cascade)

  @@map("field_options")
}

model FieldValidation {
  id            String             @id @default(uuid())
  ruleType      ValidationRuleType
  value         String?            // Value for the validation (e.g., "5" for MIN_LENGTH)
  errorMessage  String

  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt

  // Relations
  fieldId       String
  field         FormField @relation(fields: [fieldId], references: [id], onDelete: Cascade)

  @@map("field_validations")
}
